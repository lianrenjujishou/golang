本篇讲一下如何写代码利用http/https协议进行前后端交互
*.写在前头: 针对的是http1.1, 虽说现在已经有http/2和http/3了
我们从广义到狭义一点点的来展开
1.首先, http协议的通信从大的角度上来看包含两部分: 
  a.客户端发出的请求
  b.服务端返回的响应

2.再来看一下请求与响应的大体结构,其实很类似,单从结构上讲可以说是一模一样:
  a.请求的结构:
    请求行(由三部分组成: 请求方法 资源地址 http版本号)
    请求头(多个 键:值 对组成)
    空行(由回车和换页组成)
    [body]
  b.响应的结构:
    状态行(同样由三部分组成: http版本号 状态码 与状态码对应的消息)
    响应头(多个 键:值 对组成)
    空行(由回车和换页组成)
    [body]
  *.需要注意的一点: 虽然请求头和响应头都可以添加为任何的键值对,但有些内置的键值对是有固定作用的, 你自己自定义的头肯定是用于你的逻辑中, 而有些内置的字段是给浏览器看的, 浏览器会根据这些键相应的值做出相应的反应
  *.无论是请求中的body还是响应中的body都是可选的, 这个body在文档中被描述为entity,即实体,其中请求头和响应头中还有一些固定的字段是与body相关联的, 目的是告诉对方如何处理这个body.
  参考地址:
    https://www.w3.org/Protocols/rfc2616/rfc2616-sec7.html#sec7  //该地址主要是描述与body相关的请求头/响应头都有啥
    https://en.wikipedia.org/wiki/HTTP   //向下拉有关于http1.1各部分的举例描述

=====
有了上面的知识做铺垫, 下面我们就具体的讲一下前端是 如何构建请求 的以及 后端是如何构建响应 的.
  a.前端如何构建请求:
    主要讲利用GET和POST方法请求时传递参数,文本,html,json,文件.其实客户端不仅可以使用内置的那几种请求方法, 还可以自己自定义, 只要后端有相应的处理逻辑即可.
    GET主要是用于向服务器请求资源
    POST主要是用于向服务器发送资源
    -----使用GET方法传递参数-----
    方法一: 利用XMLHttpRequst构建请求
      //XMLHttpRequest mdn文档: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest

    方法二: 利用Request()构造器构建请求,配合fetch().then()使用
    方法三: 利用html的表单构建请求
    方法四(如何利用纯nodejs实现):
    -----------------------------
    -----使用POST方法传递参数-----
    方法一: 利用XMLHttpRequst构建请求
    方法二: 利用Request()构造器构建请求,配合fetch().then()使用
    方法三: 利用html的表单构建请求
    ------------------------------
  b.后端如何构建响应:
